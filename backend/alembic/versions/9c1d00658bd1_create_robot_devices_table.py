"""create robot_devices table

Revision ID: 9c1d00658bd1
Revises: 17fa939defcc
Create Date: 2025-08-22 01:18:55.902425

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c1d00658bd1'
down_revision: Union[str, None] = '17fa939defcc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('robot_devices',
    sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('device_name', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('device_id')
    )
    op.create_table('task_definitions',
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('task_name', sa.String(), nullable=False),
    sa.Column('parameters_schema', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('task_schedules',
    sa.Column('schedule_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('scheduled_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['robot_devices.device_id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task_definitions.task_id'], ),
    sa.PrimaryKeyConstraint('schedule_id')
    )
    op.create_table('task_execution_logs',
    sa.Column('log_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('schedule_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('executed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('result', sa.String(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['task_schedules.schedule_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_execution_logs')
    op.drop_table('task_schedules')
    op.drop_table('task_definitions')
    op.drop_table('robot_devices')
    # ### end Alembic commands ###
